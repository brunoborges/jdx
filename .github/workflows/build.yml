name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  release:
    types: [ created ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
            artifact-name: linux-x86_64
          - os: macos-latest
            platform: osx
            artifact-name: macos-x86_64
          - os: windows-latest
            platform: windows
            artifact-name: windows-x86_64
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 25
      uses: actions/setup-java@v4
      with:
        java-version: '25'
        distribution: 'temurin'
        
    - name: Cache Maven packages
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build with Maven (without jlink)
      run: mvn -B clean package --file pom.xml
      
    - name: Run tests
      run: mvn -B test --file pom.xml
      
    - name: Build distribution with jlink runtime
      run: mvn -B package -Pjlink-runtime --file pom.xml
      
    - name: List distribution files (Unix)
      if: runner.os != 'Windows'
      run: |
        ls -lh target/*.zip target/*.tar.gz || true
        
    - name: List distribution files (Windows)
      if: runner.os == 'Windows'
      run: |
        dir target\*.zip
        dir target\*.tar.gz
        
    - name: Upload distribution artifacts
      uses: actions/upload-artifact@v4
      with:
        name: jdx-${{ matrix.artifact-name }}
        path: |
          target/*.zip
          target/*.tar.gz
        retention-days: 30
        
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      if: matrix.os == 'ubuntu-latest'
      with:
        name: jdx-jar
        path: target/jdx-*.jar
        retention-days: 30
        
    - name: Upload release assets
      if: github.event_name == 'release'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          target/*.zip
          target/*.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

